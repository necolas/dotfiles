#!/bin/bash

# Header logging
e_header() {
    printf "\n$(tput setaf 7)%s$(tput sgr0)\n" "$@"
}

# Success logging
e_success() {
    printf "$(tput setaf 64)âœ“ %s$(tput sgr0)\n" "$@"
}

# Error logging
e_error() {
    printf "$(tput setaf 1)x %s$(tput sgr0)\n" "$@"
}

# Warning logging
e_warning() {
    printf "$(tput setaf 136)! %s$(tput sgr0)\n" "$@"
}

# Ask for confirmation before proceeding
seek_confirmation() {
    printf "\n"
    e_warning "$@"
    read -p "Continue? (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      return 0
    fi
    return 1
}

# Test whether we're in a git repo
is_git_repo() {
    $(git rev-parse --is-inside-work-tree &> /dev/null)
}

# Test whether a command exists
# $1 - cmd to test
type_exists() {
    if [ $(type -P $1) ]; then
      return 0
    fi
    return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
    if $(brew list $1 >/dev/null); then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warning "Missing formula: $1"
    return 1
}

# Check if xCode is present
check_xcode() {
    if type_exists 'gcc'; then
        e_success "xCode is installed"
    else
        e_warning "The XCode Command Line Tools must be installed first."
        install_xcode
    fi
}

# Install xCode Command Line Tools
install_xcode() {
    # figure out what version of OS X is running
    darwin_version=$(uname -r)

    # are you on Mavericks, Darwin kernal 13.0.0 or above
    if (( ${darwin_version%%.*} > 12 )); then
        e_header "Installing xCode Command Line Tools. Follow the prompt"
        xcode-select --install
        seek_confirmation "Is xCode done installing"

        if is_confirmed; then
            check_xcode
        else
            check_xcode
        fi
    else
        printf "  Download them from: https://developer.apple.com/downloads\n"
        printf "  Then run: bash ~/.dotfiles/bin/dotfiles\n"
        exit 1
    fi
}
